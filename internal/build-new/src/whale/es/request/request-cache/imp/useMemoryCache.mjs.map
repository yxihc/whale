{"version":3,"file":"useMemoryCache.mjs","sources":["../../../../../../../../packages/request/request-cache/imp/useMemoryCache.ts"],"sourcesContent":["import type { AsyncCacheStore } from '../asyncCacheStore'\n\nclass MemoryCacheStore implements AsyncCacheStore {\n  private store: Map<string, any> = new Map()\n\n  async get<T>(key: string): Promise<T | undefined> {\n    return this.store.get(key)\n  }\n\n  async set<T>(key: string, value: T): Promise<void> {\n    this.store.set(key, value)\n  }\n\n  async delete(key: string): Promise<void> {\n    this.store.delete(key)\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.store.has(key)\n  }\n}\n\nexport function useMemoryCache() {\n  return new MemoryCacheStore()\n}\n"],"names":[],"mappings":"AAAA,MAAM,gBAAgB,CAAC;AACvB,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,KAAK,mBAAmB,IAAI,GAAG,EAAE,CAAC;AAC3C,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE;AACjB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/B,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AACxB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/B,GAAG;AACH,EAAE,MAAM,MAAM,CAAC,GAAG,EAAE;AACpB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE;AACjB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/B,GAAG;AACH,CAAC;AACM,SAAS,cAAc,GAAG;AACjC,EAAE,OAAO,IAAI,gBAAgB,EAAE,CAAC;AAChC;;;;"}