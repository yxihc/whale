{"version":3,"file":"useLocalStorageCache.js","sources":["../../../../../../../../packages/request/request-cache/imp/useLocalStorageCache.ts"],"sourcesContent":["import type { AsyncCacheStore } from '../asyncCacheStore'\n\nclass LocalStorageCacheStore implements AsyncCacheStore {\n  private storage: Storage\n\n  constructor() {\n    this.storage = localStorage\n  }\n\n  async get<T>(key: string): Promise<T | undefined> {\n    const item = this.storage.getItem(key)\n    if (item) {\n      return JSON.parse(item) as T\n    }\n    return undefined\n  }\n\n  async set<T>(key: string, value: T): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value))\n  }\n\n  async delete(key: string): Promise<void> {\n    this.storage.removeItem(key)\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.storage.getItem(key) !== null\n  }\n}\n\nexport function useLocationStorageCache() {\n  return new LocalStorageCacheStore()\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,sBAAsB,CAAC;AAC7B,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;AAChC,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE;AACjB,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC3C,IAAI,IAAI,IAAI,EAAE;AACd,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC9B,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AACxB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,GAAG;AACH,EAAE,MAAM,MAAM,CAAC,GAAG,EAAE;AACpB,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACjC,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE;AACjB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;AAC9C,GAAG;AACH,CAAC;AACM,SAAS,uBAAuB,GAAG;AAC1C,EAAE,OAAO,IAAI,sBAAsB,EAAE,CAAC;AACtC;;;;"}